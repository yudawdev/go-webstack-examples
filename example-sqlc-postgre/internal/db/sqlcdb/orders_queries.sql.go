// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: orders_queries.sql

package sqlcdb

import (
	"context"

	uuid "github.com/gofrs/uuid/v5"
	"github.com/shopspring/decimal"
)

const UpsertOrders = `-- name: UpsertOrders :exec
INSERT INTO "orders"(id,
                     account_id,
                     symbol,
                     quantity,
                     fees,
                     status,
                     version)
VALUES ($1,
        $2,
        $3,
        $4,
        $5,
        $6,
        $7) ON CONFLICT (id) DO
UPDATE
    SET quantity = EXCLUDED.quantity,
    fees = EXCLUDED.fees,
    status = EXCLUDED.status,
    version = EXCLUDED.version
WHERE orders.version <= EXCLUDED.version
`

type UpsertOrdersParams struct {
	ID        uuid.UUID
	AccountID uuid.UUID
	Symbol    string
	Quantity  decimal.Decimal
	Fees      []byte
	Status    OrderStatus
	Version   int32
}

func (q *Queries) UpsertOrders(ctx context.Context, arg *UpsertOrdersParams) error {
	_, err := q.db.Exec(ctx, UpsertOrders,
		arg.ID,
		arg.AccountID,
		arg.Symbol,
		arg.Quantity,
		arg.Fees,
		arg.Status,
		arg.Version,
	)
	return err
}
